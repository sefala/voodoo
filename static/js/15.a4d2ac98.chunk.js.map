{"version":3,"sources":["hooks/useBlock.ts","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/Syrup.tsx"],"names":["useBlock","useContext","BlockContext","StyledLabel","styled","div","isFinished","theme","colors","Label","text","StyledText","Text","isDisabled","color","textDisabled","Balance","value","fontSize","decimals","unit","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","DepositModal","max","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","TranslateString","useI18n","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","handleSelectMax","title","TokenInput","onSelectMax","onChange","symbol","ModalActions","fullWidth","variant","onClick","disabled","a","WithdrawModal","CardTitle","Card","props","card","background","isActive","StyledButton","button","size","padding","undefined","StyledLink","Link","spacing","StyledExternalLink","Button","buttonSize","buttonPadding","children","href","to","ThemeContext","buttonColor","ButtonChild","target","boxShadow","StyledFooter","isDark","StyledDetailsButton","primary","Details","Row","FlexFull","CardFooter","totalStaked","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","style","marginBottom","role","aria-label","getBalanceNumber","React","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","sousId","image","stakingTokenName","stakingTokenAddress","harvest","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","stakingTokenContract","useERC20","account","useWallet","block","onApprove","useSousApprove","onStake","useSousStake","onUnstake","useSousUnstake","onReward","useSousHarvest","requestedApproval","setRequestedApproval","allowance","BigNumber","stakingTokenBalance","stakedBalance","earnings","pendingReward","Math","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","useModal","isGreaterThan","onPresentDeposit","onPresentWithdraw","handleApprove","console","error","display","alignItems","flex","src","width","height","alt","HarvestButton","UnlockButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","as","Farm","path","pools","usePools","bnbPriceUSD","usePriceBnbBusd","voodooPrice","usePriceVoodooBnb","poolsWithApy","map","stakingTokenPriceInBNB","totalRewardPricePerYear","times","tokenPerBlock","BLOCKS_PER_YEAR","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Flex","mb","textAlign","exact"],"mappings":"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","file":"static/js/15.a4d2ac98.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '../uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\n\ninterface Props {\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  {' '}\n                </span>\n                Total\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>Start:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>End:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from 'uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    harvest,\n    apy,\n    tokenDecimals,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber()\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished}>\n      {isFinished && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished}>{tokenName} Pool</CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        <BalanceAndCompound>\n          <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n        </BalanceAndCompound>\n\n        <Label isFinished={isFinished} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx} onClick={onPresentWithdraw}>\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n\n                <IconButton disabled={isFinished} onClick={onPresentDeposit}>\n                  <AddIcon color=\"background\" />\n                </IconButton>\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              {' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from 'uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport partition from 'lodash/partition'\nimport useBlock from 'hooks/useBlock'\nimport { usePriceBnbBusd, usePools, usePriceVoodooBnb } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { account } = useWallet()\n\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const voodooPrice = usePriceVoodooBnb()\n  const block = useBlock()\n\n  const poolsWithApy = pools.map((pool) => {\n    const stakingTokenPriceInBNB = voodooPrice.div(bnbPriceUSD)\n    const rewardTokenPriceInBNB = new BigNumber(pool.tokenName === 'wbnb' ? 1 : bnbPriceUSD)\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(pool.totalStaked)\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <FlexLayout>\n        <Heading as=\"h1\" size=\"lg\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        Juju Stakes\n        </Heading>\n        <PoolTabButtons />\n      </FlexLayout>\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {openPools.map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {finishedPools.map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nexport default Farm\n"],"sourceRoot":""}