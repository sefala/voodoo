{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","hooks/useStake.ts","config/index.ts","components/layout/Flex.tsx","hooks/useApprove.ts","hooks/useUnstake.ts","hooks/useBlock.ts","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/Syrup.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","startAdornment","rest","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","value","depositFeeBP","TranslateString","useI18n","toLocaleString","onClick","placeholder","BigNumber","times","toString","useStake","pid","dispatch","useDispatch","account","useWallet","masterChefContract","useMasterchef","onStake","useCallback","amount","a","stake","txHash","fetchFarmUserDataAsync","console","info","useSousStake","sousId","sousChefContract","useSousChef","sousStake","updateUserStakedBalance","updateUserBalance","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","useApprove","lpContract","onApprove","approve","tx","useSousApprove","updateUserAllowance","useSousUnstake","onUnstake","unstake","updateUserPendingReward","useUnstake","useBlock","BlockContext","StyledLabel","isFinished","Label","text","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","decimals","unit","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","variant","disabled","WithdrawModal","CardTitle","Card","card","background","isActive","StyledButton","button","padding","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","href","to","buttonColor","ButtonChild","target","boxShadow","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","CardFooter","totalStaked","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","style","marginBottom","role","aria-label","getBalanceNumber","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","image","stakingTokenName","stakingTokenAddress","harvest","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","stakingTokenContract","useERC20","block","onReward","useSousHarvest","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","earnings","pendingReward","Math","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","useModal","isGreaterThan","onPresentDeposit","onPresentWithdraw","handleApprove","error","display","alignItems","flex","src","width","height","alt","HarvestButton","UnlockButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","as","Farm","path","pools","usePools","bnbPriceUSD","usePriceBnbBusd","voodooPrice","usePriceVoodooBnb","poolsWithApy","stakingTokenPriceInBNB","totalRewardPricePerYear","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Flex","mb","textAlign","exact"],"mappings":"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","file":"static/js/10.540e6970.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange?: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value?: string\n  min?: number | string\n  max?: number | string\n  type?: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, startAdornment, ...rest }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput onChange={onChange} {...rest} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from 'uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, restake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\nimport { fetchFarmUserDataAsync } from '../state/farms'\n\nexport const useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\nexport const useReStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(async () => {\n    const txHash = await restake(masterChefContract, pid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    console.info(txHash)\n  }, [account, dispatch, masterChefContract, pid])\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await sousStake(sousChefContract, amount, account)\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { fetchFarmUserDataAsync } from '../state/farms'\nimport { useMasterchef, useSousChef } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstake } from 'utils/callHelpers'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useMasterchef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, 0, amount, account)\n      console.info(txHash)\n\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, masterChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '../uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\n\ninterface Props {\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  {' '}\n                </span>\n                Total\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>Start:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>End:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from 'uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    harvest,\n    apy,\n    tokenDecimals,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber()\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished}>\n      {isFinished && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished}>{tokenName} Pool</CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        <BalanceAndCompound>\n          <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n        </BalanceAndCompound>\n\n        <Label isFinished={isFinished} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx} onClick={onPresentWithdraw}>\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n\n                <IconButton disabled={isFinished} onClick={onPresentDeposit}>\n                  <AddIcon color=\"background\" />\n                </IconButton>\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              {' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from 'uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport partition from 'lodash/partition'\nimport useBlock from 'hooks/useBlock'\nimport { usePriceBnbBusd, usePools, usePriceVoodooBnb } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { account } = useWallet()\n\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const voodooPrice = usePriceVoodooBnb()\n  const block = useBlock()\n\n  const poolsWithApy = pools.map((pool) => {\n    const stakingTokenPriceInBNB = voodooPrice.div(bnbPriceUSD)\n    const rewardTokenPriceInBNB = new BigNumber(pool.tokenName === 'WBNB' ? 1 : bnbPriceUSD)\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(pool.totalStaked)\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <FlexLayout>\n        <Heading as=\"h1\" size=\"lg\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        Juju Stakes\n        </Heading>\n        <PoolTabButtons />\n      </FlexLayout>\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {openPools.map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {finishedPools.map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nexport default Farm\n"],"sourceRoot":""}