{"version":3,"sources":["utils/erc20.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","components/Tags.tsx","views/Farms/components/FarmCard/CardHeading.tsx","../node_modules/react-countdown/dist/index.es.js","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/Farms.tsx"],"names":["getContract","provider","address","Web3","eth","Contract","erc20","getTokenBalance","tokenAddress","userAddress","a","contract","methods","balanceOf","call","balance","Wrapper","styled","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","getLiquidityUrlPathParts","quoteTokenAdresses","quoteTokenSymbol","tokenAddresses","firstPart","process","secondPart","StyledLinkExternal","LinkExternal","text","getSwapUrl","swap","Swap","HYPR","SLIME","DetailsSection","bscScanAddress","removed","totalValueFormated","lpLabel","tokenUrl","TranslateString","useI18n","liquidityUrlPathParts","justifyContent","href","external","NoFeeTag","variant","outline","startIcon","Flex","MultiplierTag","Tag","CardHeading","multiplier","farmImage","tokenSymbol","depositFee","alignItems","mb","src","alt","width","height","flexDirection","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_inherits","subClass","superClass","create","constructor","value","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","_isNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","Symbol","iterator","from","_iterableToArray","minLen","n","slice","name","test","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","zeroPad","undefined","strValue","String","match","prefix","suffix","strNo","paddedNo","map","join","concat","timeDeltaFormatOptionsDefaults","daysInHours","zeroPadTime","formatTimeDelta","timeDelta","options","days","hours","minutes","seconds","_Object$assign","assign","_Object$assign$zeroPa","zeroPadDays","zeroPadTimeLength","Math","min","formattedHours","Countdown","_React$Component","_super","_this","state","count","startCountdown","interval","window","setInterval","stopCountdown","onComplete","setState","prevState","clearInterval","addTime","children","cloneElement","Component","propTypes","number","element","func","Countdown$1","mounted","initialTimestamp","calcOffsetStartTimestamp","offsetStartTimestamp","autoStart","offsetTime","legacyMode","legacyCountdownRef","createRef","tick","calcTimeDelta","callback","completed","overtime","onTick","setTimeDeltaState","start","isStarted","prevOffsetStartTimestamp","onStart","controlled","clearTimer","intervalDelay","pause","isPaused","onPause","stop","isStopped","onStop","isStatus","isCompleted","handleOnComplete","date","status","onMount","prevProps","shallowCompare","_this$props","now","precision","startTimestamp","_options$now","_options$precision","_options$offsetTime","getTime","timeLeft","clampedPrecision","max","total","round","parseFloat","toFixed","abs","floor","milliseconds","Number","current","objA","objB","keysA","keys","some","keyA","valueA","valueB","hasOwnProperty","_this2","completedCallback","newStatus","api","_this$props2","getApi","formatted","_this$props3","_children","createElement","ref","_this$props4","className","renderer","renderProps","getRenderProps","countdown","_renderProps$formatte","oneOfType","instanceOf","string","bool","DepositModal","onConfirm","onDismiss","tokenName","depositFeeBP","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","currentTarget","handleSelectMax","title","TokenInput","onSelectMax","onChange","symbol","ModalActions","disabled","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","pid","onStake","useStake","onUnstake","useUnstake","rawStakedBalance","getBalanceNumber","displayBalance","toLocaleString","useModal","onPresentDeposit","onPresentWithdraw","mr","BalanceAndCompound","HarvestAction","earnings","onReward","useHarvest","rawEarningsBalance","size","marginBottom","Action","Divider","borderColor","CardActions","farm","ethereum","account","requestedApproval","setRequestedApproval","useFarmFromPid","lpAddresses","isTokenOnly","useFarmUser","allowance","lpAddress","lpName","lpSymbol","toUpperCase","isApproved","isGreaterThan","lpContract","onApprove","useApprove","handleApprove","console","error","startTime","renderButton","mt","fullWidth","countdownProps","paddedSeconds","paddedMinutes","paddedHours","fontSize","pr","textTransform","UnlockButton","calculateCakeEarnedPerThousandDollars","numberOfDays","apyAsDecimal","farmApy","daysAsDecimalOfYear","principal","necroPrice","finalAmount","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","Text","ApyCalculatorModal","apy","times","BigNumber","toNumber","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","ApyButton","onPresentApyModal","ml","RainbowLight","keyframes","StyledCardAccent","FCard","card","background","ExpandingWrapper","FarmCard","showExpandableSection","setShowExpandableSection","toLowerCase","totalValue","maximumFractionDigits","earnLabel","farmAPY","minimumFractionDigits","PCS","style","display","CardActionsContainer","FarmTabButtons","useRouteMatch","url","isExact","activeIndex","as","Link","to","Farms","isSummon","path","farmsLP","useFarms","usePriceVoodooBnb","supraPrice","usePriceSupraBnb","bnbPrice","usePriceBnbBusd","utSupraPrice","usePriceUtSupra","useWallet","dispatch","useDispatch","fastRefresh","useRefresh","useEffect","fetchFarmUserDataAsync","activeFarms","filter","inactiveFarms","farmsList","farmsToDisplay","cakeRewardPerYear","tokenPerBLock","poolWeight","pow","BLOCKS_PER_YEAR","tokenAmount","QuoteToken","VOODOO","lpTotalInQuoteToken","BNB","SUPRA","comparedTo","Page","textAlign","exact"],"mappings":"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","file":"static/js/12.d6f9f8dd.chunk.js","sourcesContent":["import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\n// In the URL, using the quote token 'BNB' is represented by 'ETH'\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const firstPart = quoteTokenSymbol === 'BNB' ? 'ETH' : quoteTokenAdresses[chainId]\n  const secondPart = tokenAddresses[chainId]\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\nimport { Text, Flex, Link, LinkExternal } from 'uikit'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Address, Swap } from 'config/constants/types'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  removed?: boolean\n  totalValueFormated?: string\n  lpLabel?: string\n  tokenUrl?: string\n  quoteTokenAdresses?: Address\n  quoteTokenSymbol?: string\n  tokenAddresses: Address\n  swap?: Swap\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: normal;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst getSwapUrl = (swap?: Swap) => {\n  if (swap === Swap.HYPR) return 'https://swap.hyperjump.fi/#/'\n  if (swap === Swap.SLIME) return 'https://dex.slime.finance/#/'\n\n  return 'https://exchange.pancakeswap.finance/#/'\n}\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  removed,\n  totalValueFormated,\n  lpLabel,\n  tokenUrl,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n  swap,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(316, 'Stake')}:</Text>\n        <StyledLinkExternal href={tokenUrl ?? `${getSwapUrl(swap)}add/${liquidityUrlPathParts}`}>\n          {lpLabel}\n        </StyledLinkExternal>\n      </Flex>\n      {!removed && (\n        <Flex justifyContent=\"space-between\">\n          <Text>{TranslateString(23, 'Total Liquidity')}:</Text>\n          <Text>{totalValueFormated}</Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"flex-start\">\n        <Link external href={bscScanAddress} bold={false}>\n          {TranslateString(356, 'View on BscScan')}\n        </Link>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport { Tag, VerifiedIcon } from 'uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nexport default NoFeeTag;","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from 'uikit'\nimport NoFeeTag from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  depositFee?: number\n  farmImage?: string\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 0.25rem;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier, farmImage, tokenSymbol, depositFee }) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel}</Heading>\n        <Flex justifyContent=\"center\">\n          {depositFee === 0 ? <NoFeeTag /> : null}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { cloneElement, Component, createRef, createElement } from 'react';\nimport { number, element, func, oneOfType, instanceOf, string, bool } from 'prop-types';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction zeroPad(value) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var strValue = String(value);\n  if (length === 0) return strValue;\n  var match = strValue.match(/(.*?)([0-9]+)(.*)/);\n  var prefix = match ? match[1] : '';\n  var suffix = match ? match[3] : '';\n  var strNo = match ? match[2] : strValue;\n  var paddedNo = strNo.length >= length ? strNo : (_toConsumableArray(Array(length)).map(function () {\n    return '0';\n  }).join('') + strNo).slice(length * -1);\n  return \"\".concat(prefix).concat(paddedNo).concat(suffix);\n}\nvar timeDeltaFormatOptionsDefaults = {\n  daysInHours: false,\n  zeroPadTime: 2\n};\nfunction calcTimeDelta(date) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$now = options.now,\n      now = _options$now === void 0 ? Date.now : _options$now,\n      _options$precision = options.precision,\n      precision = _options$precision === void 0 ? 0 : _options$precision,\n      controlled = options.controlled,\n      _options$offsetTime = options.offsetTime,\n      offsetTime = _options$offsetTime === void 0 ? 0 : _options$offsetTime,\n      overtime = options.overtime;\n  var startTimestamp;\n\n  if (typeof date === 'string') {\n    startTimestamp = new Date(date).getTime();\n  } else if (date instanceof Date) {\n    startTimestamp = date.getTime();\n  } else {\n    startTimestamp = date;\n  }\n\n  if (!controlled) {\n    startTimestamp += offsetTime;\n  }\n\n  var timeLeft = controlled ? startTimestamp : startTimestamp - now();\n  var clampedPrecision = Math.min(20, Math.max(0, precision));\n  var total = Math.round(parseFloat(((overtime ? timeLeft : Math.max(0, timeLeft)) / 1000).toFixed(clampedPrecision)) * 1000);\n  var seconds = Math.abs(total) / 1000;\n  return {\n    total: total,\n    days: Math.floor(seconds / (3600 * 24)),\n    hours: Math.floor(seconds / 3600 % 24),\n    minutes: Math.floor(seconds / 60 % 60),\n    seconds: Math.floor(seconds % 60),\n    milliseconds: Number((seconds % 1 * 1000).toFixed()),\n    completed: total <= 0\n  };\n}\nfunction formatTimeDelta(timeDelta, options) {\n  var days = timeDelta.days,\n      hours = timeDelta.hours,\n      minutes = timeDelta.minutes,\n      seconds = timeDelta.seconds;\n\n  var _Object$assign = Object.assign(Object.assign({}, timeDeltaFormatOptionsDefaults), options),\n      daysInHours = _Object$assign.daysInHours,\n      zeroPadTime = _Object$assign.zeroPadTime,\n      _Object$assign$zeroPa = _Object$assign.zeroPadDays,\n      zeroPadDays = _Object$assign$zeroPa === void 0 ? zeroPadTime : _Object$assign$zeroPa;\n\n  var zeroPadTimeLength = Math.min(2, zeroPadTime);\n  var formattedHours = daysInHours ? zeroPad(hours + days * 24, zeroPadTime) : zeroPad(hours, zeroPadTimeLength);\n  return {\n    days: daysInHours ? '' : zeroPad(days, zeroPadDays),\n    hours: formattedHours,\n    minutes: zeroPad(minutes, zeroPadTimeLength),\n    seconds: zeroPad(seconds, zeroPadTimeLength)\n  };\n}\n\nvar Countdown = function (_React$Component) {\n  _inherits(Countdown, _React$Component);\n\n  var _super = _createSuper(Countdown);\n\n  function Countdown() {\n    var _this;\n\n    _classCallCheck(this, Countdown);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      count: _this.props.count || 3\n    };\n\n    _this.startCountdown = function () {\n      _this.interval = window.setInterval(function () {\n        var count = _this.state.count - 1;\n\n        if (count === 0) {\n          _this.stopCountdown();\n\n          _this.props.onComplete && _this.props.onComplete();\n        } else {\n          _this.setState(function (prevState) {\n            return {\n              count: prevState.count - 1\n            };\n          });\n        }\n      }, 1000);\n    };\n\n    _this.stopCountdown = function () {\n      clearInterval(_this.interval);\n    };\n\n    _this.addTime = function (seconds) {\n      _this.stopCountdown();\n\n      _this.setState(function (prevState) {\n        return {\n          count: prevState.count + seconds\n        };\n      }, _this.startCountdown);\n    };\n\n    return _this;\n  }\n\n  _createClass(Countdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.startCountdown();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children ? cloneElement(this.props.children, {\n        count: this.state.count\n      }) : null;\n    }\n  }]);\n\n  return Countdown;\n}(Component);\nCountdown.propTypes = {\n  count: number,\n  children: element,\n  onComplete: func\n};\n\nvar Countdown$1 = function (_React$Component) {\n  _inherits(Countdown$1, _React$Component);\n\n  var _super = _createSuper(Countdown$1);\n\n  function Countdown$1(props) {\n    var _this;\n\n    _classCallCheck(this, Countdown$1);\n\n    _this = _super.call(this, props);\n    _this.mounted = false;\n    _this.initialTimestamp = _this.calcOffsetStartTimestamp();\n    _this.offsetStartTimestamp = _this.props.autoStart ? 0 : _this.initialTimestamp;\n    _this.offsetTime = 0;\n    _this.legacyMode = false;\n    _this.legacyCountdownRef = createRef();\n\n    _this.tick = function () {\n      var timeDelta = _this.calcTimeDelta();\n\n      var callback = timeDelta.completed && !_this.props.overtime ? undefined : _this.props.onTick;\n\n      _this.setTimeDeltaState(timeDelta, undefined, callback);\n    };\n\n    _this.start = function () {\n      if (_this.isStarted()) return;\n      var prevOffsetStartTimestamp = _this.offsetStartTimestamp;\n      _this.offsetStartTimestamp = 0;\n      _this.offsetTime += prevOffsetStartTimestamp ? _this.calcOffsetStartTimestamp() - prevOffsetStartTimestamp : 0;\n\n      var timeDelta = _this.calcTimeDelta();\n\n      _this.setTimeDeltaState(timeDelta, \"STARTED\", _this.props.onStart);\n\n      if (!_this.props.controlled && (!timeDelta.completed || _this.props.overtime)) {\n        _this.clearTimer();\n\n        _this.interval = window.setInterval(_this.tick, _this.props.intervalDelay);\n      }\n    };\n\n    _this.pause = function () {\n      if (_this.isPaused()) return;\n\n      _this.clearTimer();\n\n      _this.offsetStartTimestamp = _this.calcOffsetStartTimestamp();\n\n      _this.setTimeDeltaState(_this.state.timeDelta, \"PAUSED\", _this.props.onPause);\n    };\n\n    _this.stop = function () {\n      if (_this.isStopped()) return;\n\n      _this.clearTimer();\n\n      _this.offsetStartTimestamp = _this.calcOffsetStartTimestamp();\n      _this.offsetTime = _this.offsetStartTimestamp - _this.initialTimestamp;\n\n      _this.setTimeDeltaState(_this.calcTimeDelta(), \"STOPPED\", _this.props.onStop);\n    };\n\n    _this.isStarted = function () {\n      return _this.isStatus(\"STARTED\");\n    };\n\n    _this.isPaused = function () {\n      return _this.isStatus(\"PAUSED\");\n    };\n\n    _this.isStopped = function () {\n      return _this.isStatus(\"STOPPED\");\n    };\n\n    _this.isCompleted = function () {\n      return _this.isStatus(\"COMPLETED\");\n    };\n\n    _this.handleOnComplete = function (timeDelta) {\n      if (_this.props.onComplete) _this.props.onComplete(timeDelta);\n    };\n\n    if (props.date) {\n      var timeDelta = _this.calcTimeDelta();\n\n      _this.state = {\n        timeDelta: timeDelta,\n        status: timeDelta.completed ? \"COMPLETED\" : \"STOPPED\"\n      };\n    } else {\n      _this.legacyMode = true;\n    }\n\n    return _this;\n  }\n\n  _createClass(Countdown$1, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.legacyMode) {\n        return;\n      }\n\n      this.mounted = true;\n      if (this.props.onMount) this.props.onMount(this.calcTimeDelta());\n      if (this.props.autoStart) this.start();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.legacyMode) {\n        return;\n      }\n\n      if (!this.shallowCompare(this.props, prevProps)) {\n        if (this.props.date !== prevProps.date) {\n          this.initialTimestamp = this.calcOffsetStartTimestamp();\n          this.offsetStartTimestamp = this.initialTimestamp;\n          this.offsetTime = 0;\n        }\n\n        this.setTimeDeltaState(this.calcTimeDelta());\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.legacyMode) {\n        return;\n      }\n\n      this.mounted = false;\n      this.clearTimer();\n    }\n  }, {\n    key: \"calcTimeDelta\",\n    value: function calcTimeDelta$1() {\n      var _this$props = this.props,\n          date = _this$props.date,\n          now = _this$props.now,\n          precision = _this$props.precision,\n          controlled = _this$props.controlled,\n          overtime = _this$props.overtime;\n      return calcTimeDelta(date, {\n        now: now,\n        precision: precision,\n        controlled: controlled,\n        offsetTime: this.offsetTime,\n        overtime: overtime\n      });\n    }\n  }, {\n    key: \"calcOffsetStartTimestamp\",\n    value: function calcOffsetStartTimestamp() {\n      return Date.now();\n    }\n  }, {\n    key: \"addTime\",\n    value: function addTime(seconds) {\n      this.legacyCountdownRef.current.addTime(seconds);\n    }\n  }, {\n    key: \"clearTimer\",\n    value: function clearTimer() {\n      window.clearInterval(this.interval);\n    }\n  }, {\n    key: \"isStatus\",\n    value: function isStatus(status) {\n      return this.state.status === status;\n    }\n  }, {\n    key: \"shallowCompare\",\n    value: function shallowCompare(objA, objB) {\n      var keysA = Object.keys(objA);\n      return keysA.length === Object.keys(objB).length && !keysA.some(function (keyA) {\n        var valueA = objA[keyA];\n        var valueB = objB[keyA];\n        return !objB.hasOwnProperty(keyA) || !(valueA === valueB || valueA !== valueA && valueB !== valueB);\n      });\n    }\n  }, {\n    key: \"setTimeDeltaState\",\n    value: function setTimeDeltaState(timeDelta, status, callback) {\n      var _this2 = this;\n\n      if (!this.mounted) return;\n      var completedCallback;\n\n      if (!this.state.timeDelta.completed && timeDelta.completed) {\n        if (!this.props.overtime) this.clearTimer();\n        completedCallback = this.handleOnComplete;\n      }\n\n      var onDone = function onDone() {\n        if (callback) callback(_this2.state.timeDelta);\n        if (completedCallback) completedCallback(_this2.state.timeDelta);\n      };\n\n      return this.setState(function (prevState) {\n        var newStatus = status || prevState.status;\n\n        if (timeDelta.completed && !_this2.props.overtime) {\n          newStatus = \"COMPLETED\";\n        } else if (!status && newStatus === \"COMPLETED\") {\n          newStatus = \"STOPPED\";\n        }\n\n        return {\n          timeDelta: timeDelta,\n          status: newStatus\n        };\n      }, onDone);\n    }\n  }, {\n    key: \"getApi\",\n    value: function getApi() {\n      return this.api = this.api || {\n        start: this.start,\n        pause: this.pause,\n        stop: this.stop,\n        isStarted: this.isStarted,\n        isPaused: this.isPaused,\n        isStopped: this.isStopped,\n        isCompleted: this.isCompleted\n      };\n    }\n  }, {\n    key: \"getRenderProps\",\n    value: function getRenderProps() {\n      var _this$props2 = this.props,\n          daysInHours = _this$props2.daysInHours,\n          zeroPadTime = _this$props2.zeroPadTime,\n          zeroPadDays = _this$props2.zeroPadDays;\n      var timeDelta = this.state.timeDelta;\n      return Object.assign(Object.assign({}, timeDelta), {\n        api: this.getApi(),\n        props: this.props,\n        formatted: formatTimeDelta(timeDelta, {\n          daysInHours: daysInHours,\n          zeroPadTime: zeroPadTime,\n          zeroPadDays: zeroPadDays\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.legacyMode) {\n        var _this$props3 = this.props,\n            count = _this$props3.count,\n            _children = _this$props3.children,\n            onComplete = _this$props3.onComplete;\n        return createElement(Countdown, {\n          ref: this.legacyCountdownRef,\n          count: count,\n          onComplete: onComplete\n        }, _children);\n      }\n\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          overtime = _this$props4.overtime,\n          children = _this$props4.children,\n          renderer = _this$props4.renderer;\n      var renderProps = this.getRenderProps();\n\n      if (renderer) {\n        return renderer(renderProps);\n      }\n\n      if (children && this.state.timeDelta.completed && !overtime) {\n        return cloneElement(children, {\n          countdown: renderProps\n        });\n      }\n\n      var _renderProps$formatte = renderProps.formatted,\n          days = _renderProps$formatte.days,\n          hours = _renderProps$formatte.hours,\n          minutes = _renderProps$formatte.minutes,\n          seconds = _renderProps$formatte.seconds;\n      return createElement(\"span\", {\n        className: className\n      }, renderProps.total < 0 ? '-' : '', days, days ? ':' : '', hours, \":\", minutes, \":\", seconds);\n    }\n  }]);\n\n  return Countdown$1;\n}(Component);\nCountdown$1.defaultProps = Object.assign(Object.assign({}, timeDeltaFormatOptionsDefaults), {\n  controlled: false,\n  intervalDelay: 1000,\n  precision: 0,\n  autoStart: true\n});\nCountdown$1.propTypes = {\n  date: oneOfType([instanceOf(Date), string, number]),\n  daysInHours: bool,\n  zeroPadTime: number,\n  zeroPadDays: number,\n  controlled: bool,\n  intervalDelay: number,\n  precision: number,\n  autoStart: bool,\n  overtime: bool,\n  className: string,\n  children: element,\n  renderer: func,\n  now: func,\n  onMount: func,\n  onStart: func,\n  onPause: func,\n  onStop: func,\n  onTick: func,\n  onComplete: func\n};\n\nexport default Countdown$1;\nexport { calcTimeDelta, formatTimeDelta, zeroPad };\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  depositFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' , depositFeeBP = 0}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        depositFeeBP={depositFeeBP}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from 'uikit'\nimport useI18n from 'hooks/useI18n'\nimport {useStake} from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  depositFeeBP?: number\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({ stakedBalance, tokenBalance, tokenName, pid, depositFeeBP}) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake')}</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from 'uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport { useStake } from 'hooks/useStake'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const { onStake } = useStake(pid)\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb='8px' justifyContent='space-between' alignItems='center'>\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <BalanceAndCompound>\n        {pid === 6 ?\n          <Button\n            disabled={rawEarningsBalance === 0 || pendingTx}\n            size='sm'\n            variant='secondary'\n            marginBottom='15px'\n            onClick={async () => {\n              setPendingTx(true)\n              await onStake(rawEarningsBalance.toString())\n              setPendingTx(false)\n            }}\n          >\n            {TranslateString(999, 'Compound')}\n          </Button>\n          : null}\n        <Button\n          disabled={rawEarningsBalance === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n        >\n          {TranslateString(999, 'Harvest')}\n        </Button>\n      </BalanceAndCompound>\n    </Flex>\n  )\n}\n\nexport default HarvestAction","import React, { useMemo, useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { provider } from 'web3-core'\nimport { getContract } from 'utils/erc20'\nimport { Button, Flex, Text } from 'uikit'\nimport { Farm } from 'state/types'\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\nimport { useApprove } from 'hooks/useApprove'\nimport Countdown, { CountdownRenderProps } from 'react-countdown'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpContract = useMemo(() => {\n    if (isTokenOnly) {\n      return getContract(ethereum as provider, tokenAddress)\n    }\n    return getContract(ethereum as provider, lpAddress)\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={lpName}\n        pid={pid}\n        depositFeeBP={depositFeeBP}\n      />\n    ) : (\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\n        {TranslateString(999, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  const renderer = (countdownProps: CountdownRenderProps) => {\n    const { hours, minutes, seconds } = countdownProps\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes\n    const paddedHours = hours < 10 ? `0${hours}` : hours\n    return (\n      <>\n      <Divider />\n      <Text fontSize=\"14px\" pr=\"3px\">\n        {farm.lpSymbol} pool starts: {paddedHours}:{paddedMinutes}:{paddedSeconds}\n      </Text>\n      </>\n    )\n  }\n  let { startTime } = farm\n  if (!startTime) startTime = 0\n  // setStartTime(500000000);\n  const poolActive = startTime * 1000 - Date.now() <= 0 // startTime * 1000 - Date.now() <= 0\n\n  const renderButton = !poolActive ? (\n    <Countdown date={new Date(startTime * 1000)} renderer={renderer} />\n  ) : (\n    renderApprovalOrStakeButton()\n  )\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          voodoo\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(999, 'Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(999, 'Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderButton}\n    </Action>\n  )\n}\n\nexport default CardActions\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\n\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, necroPrice }) => {\n  // Everything here is worked out relative to a year, with the asset compounding daily\n  const timesCompounded = 365\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const apyAsDecimal = farmApy / 100\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\n  const principal = 1000 / necroPrice\n\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\n  const interestEarned = finalAmount - principal\n  return roundToTwoDp(interestEarned)\n}\n\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage.toFixed(2)\n}\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from 'uikit'\nimport useI18n from 'hooks/useI18n'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\nimport { Address } from 'config/constants/types'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  necroPrice?: BigNumber\n  apy?: BigNumber\n  quoteTokenAdresses?: Address\n  quoteTokenSymbol?: string\n  tokenAddresses: Address\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n  necroPrice,\n  apy,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\n  const oneThousandDollarsWorthOfCake = 1000 / necroPrice.toNumber()\n\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, necroPrice })\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, necroPrice })\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, necroPrice })\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, necroPrice })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'VOODOO per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          999,\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={`https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`}>\n          {TranslateString(999, 'Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { CalculateIcon, IconButton, useModal } from 'uikit'\nimport { Address } from 'config/constants/types'\nimport ApyCalculatorModal from './ApyCalculatorModal'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  necroPrice?: BigNumber\n  apy?: BigNumber\n  quoteTokenAdresses?: Address\n  quoteTokenSymbol?: string\n  tokenAddresses: Address\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n  necroPrice,\n  apy,\n}) => {\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      lpLabel={lpLabel}\n      quoteTokenAdresses={quoteTokenAdresses}\n      quoteTokenSymbol={quoteTokenSymbol}\n      tokenAddresses={tokenAddresses}\n      necroPrice={necroPrice}\n      apy={apy}\n    />,\n  )\n\n  return (\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\n      <CalculateIcon />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from 'uikit'\nimport { Swap } from 'config/constants/types'\nimport { Farm } from 'state/types'\nimport { provider } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n  totalValue?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n  min-height: 476px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 18px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  necroPrice?: BigNumber\n  ethereum?: provider\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, necroPrice, ethereum, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const farmImage = farm.isTokenOnly\n    ? farm.tokenSymbol.toLowerCase()\n    : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\n\n  const totalValueFormated = farm.totalValue\n    ? `$${Number(farm.totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol\n  const earnLabel = 'VOODOO'\n  const farmAPY =\n    farm.apy &&\n    farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === earnLabel && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        depositFee={farm.depositFeeBP}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      {!farm.isTokenOnly && (\n        <Flex justifyContent=\"space-between\">\n          <Text>Swap:</Text>\n          <Text bold>{farm.swap ?? Swap.PCS}</Text>\n        </Flex>\n      )}\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>APR:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton\n                  lpLabel={lpLabel}\n                  quoteTokenAdresses={quoteTokenAdresses}\n                  quoteTokenSymbol={quoteTokenSymbol}\n                  tokenAddresses={tokenAddresses}\n                  necroPrice={necroPrice}\n                  apy={farm.apy}\n                />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\n        <Text bold style={{ fontSize: '24px' }}>\n          {farm.depositFeeBP / 100}%\n        </Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          tokenUrl={farm.tokenUrl}\n          bscScanAddress={\n            farm.isTokenOnly\n              ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\n              : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\n          }\n          totalValueFormated={totalValueFormated}\n          lpLabel={lpLabel}\n          quoteTokenAdresses={quoteTokenAdresses}\n          quoteTokenSymbol={quoteTokenSymbol}\n          tokenAddresses={tokenAddresses}\n          swap={farm.swap}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst FarmTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import React, { useEffect, useCallback } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Heading } from 'uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceVoodooBnb, usePriceSupraBnb, usePriceUtSupra } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { QuoteToken } from 'config/constants/types'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { fetchFarmUserDataAsync } from '../../state/farms'\n\ninterface FarmProps {\n  isSummon: boolean\n}\n\nconst Farms: React.FC<FarmProps> = ({ isSummon }) => {\n  const { path } = useRouteMatch()\n  const farmsLP = useFarms()\n  const necroPrice = usePriceVoodooBnb()\n  const supraPrice = usePriceSupraBnb()\n  const bnbPrice = usePriceBnbBusd()\n  const utSupraPrice = usePriceUtSupra()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isSummon === !!isSummon && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isSummon === !!isSummon && farm.multiplier === '0X')\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const necroPriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        const cakeRewardPerBlock = new BigNumber(farm.tokenPerBLock || 1)\n          .times(new BigNumber(farm.poolWeight))\n          .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        let apy = necroPrice.times(cakeRewardPerYear)\n        let totalValue\n        if (farm.isTokenOnly && farm.tokenAmount) {\n          totalValue = new BigNumber(farm.tokenAmount).times(\n            farm.tokenSymbol === QuoteToken.VOODOO ? necroPrice : utSupraPrice,\n          )\n        } else {\n          totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\n\n          if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n            totalValue = totalValue.times(bnbPrice)\n          } else if (farm.quoteTokenSymbol === QuoteToken.SUPRA) {\n            totalValue = totalValue.times(supraPrice)\n          } else if (farm.quoteTokenSymbol === QuoteToken.VOODOO) {\n            totalValue = totalValue.times(necroPrice)\n          }\n        }\n\n        if (totalValue.comparedTo(0) > 0) {\n          apy = apy.div(totalValue)\n        }\n\n        return { ...farm, totalValue, apy }\n      })\n\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          necroPrice={necroPrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, account, necroPrice, supraPrice, ethereum, utSupraPrice],\n  )\n\n  return (\n    <Page>\n      <FlexLayout>\n        <Heading as=\"h1\" size=\"lg\" mb=\"50px\" style={{ textAlign: 'center' }}>\n          {isSummon ? 'Summon dead tokens' : 'Stake to earn VOODOO'}\n        </Heading>\n        <FarmTabButtons />\n      </FlexLayout>\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsList(activeFarms, false)}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsList(inactiveFarms, true)}\n          </Route>\n        </FlexLayout>\n      </div>\n    </Page>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}